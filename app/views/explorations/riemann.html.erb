
<script>

<% resolution = 500 %>

	var h = 25;
	var sum;
	var adjust = 0.5;

var GraphPreview = {
    f: MathFunction.parse("x"),

    bindings: {},

    x1: -10.0,
    x2: 10.0,
    y1: -10.0,
    y2: 10.0,

    drawGraph: function() { 
	var f = GraphPreview.f;
	var paper = GraphPreview.paper;
	var bindings = GraphPreview.bindings;

	var x1 = GraphPreview.x1;
	var x2 = GraphPreview.x2;
	var y1 = GraphPreview.y1;
	var y2 = GraphPreview.y2;
	
	var resolution = <%= resolution %>;

	paper.clear();

   sum = 0;

console.log(adjust);

	var path = '';
	var code = 'M';
	var overrender = 1;
	for( var i=0; i<overrender * resolution; i ++ ) {
	    var x = i * (x2 - x1) / (overrender * resolution) + x1;
	    var x_pixel = Math.round(i / overrender);
	    bindings["x"] = x;
	    var y = f.evaluate( bindings );
	    var y_pixel = Math.round(resolution - j);
	    var j = (y - y1) * resolution / (y2 - y1);

	    bindings["x"] = x - (x2 - x1)/resolution;
	    var other_y = f.evaluate( bindings );

	    if (isFinite(y_pixel)) {
		if ((Math.abs(y - other_y) > 5) && (y * other_y < 0))
		    code = 'M';

		path = path + code + ( x_pixel + ',' + y_pixel );
		code = 'L';
	    } else {
		code = 'M';
	    }    	 	    
	    
	    if(i%h==0){
	    bindings["x"] = x + adjust*h/25;

	    var y3 = f.evaluate( bindings );
	    var j2 = (y3 - y1) * resolution / (y2 - y1);
	    sum += y3;
		 if(Math.round(resolution - j2)<250){
		 var r = paper.rect(x_pixel,Math.round(resolution - j2),h,250-Math.round(resolution - j2));
		 r.attr({fill: '#778899', stroke: '#000', 'stroke-width': 0.25});		 
		 }
		 
		 if(Math.round(resolution - j2)>250){
		 var r = paper.rect(x_pixel,250,h,Math.round(resolution - j)-250);
		 r.attr({fill: '#b22222', stroke: '#000', 'stroke-width': 0.25});
		 } 	   	    
	    }
	}
		
	var p = paper.path( path );
	p.attr("stroke-width", "4");	

	var axes = "M<%= resolution / 2%>,0V<%= resolution %> M0,<%= resolution/2 %>H<%= resolution %>";

	var p = paper.path( axes );
	p.attr("opacity", "0.5");	

	for( var i=Math.ceil(x1+0.0001); i <= Math.ceil(x2); i++ ) {
	    var x = (i - x1) * resolution / (x2 - x1);
	    var grid = "M" + Math.round(x) + ",0V<%= resolution %>";
	    var p = paper.path( grid );
	    p.attr("opacity", "0.15");	
	}

	for( var i=Math.ceil(y1+0.0001); i <= Math.ceil(y2); i++ ) {
	    var y = (i - y1) * resolution / (y2 - y1);
	    var grid = "M0," + Math.round(y) + ",0H<%= resolution %>";
	    var p = paper.path( grid );
	    p.attr("opacity", "0.15");	
	}
	
		var sum2 = MathJax.Hub.getAllJax($("#sum_est2")[0])[0];	  
		var text2 = "\\sum_{i=1}^n f(x_i^*)\\Delta x = " + sum/h;
		MathJax.Hub.Queue(["Text",sum2,text2]);	
	
    },

    update: function () {

	var text = document.getElementById("MathInput").value; 
	if (text.length > 0) {
	    var math = MathJax.Hub.getAllJax($("#MathPreview")[0])[0];
	    
		 var sum2 = MathJax.Hub.getAllJax($("#sum_est2")[0])[0];	    	    
	    
	    try
	    {
                var f = this.f = MathFunction.parse(text);
		var text = 'f(x) = ' + f.tex();
		MathJax.Hub.Queue(["Text",math,text]);
		var text2 = "\\sum_{i=1}^n f(x_i^*)\\Delta x = " + sum;
		MathJax.Hub.Queue(["Text",sum2,text2]);
		$("#MathFunctionError").hide();
		$("#MathPreview").show();
		
		$("#sum_est2").show();
      $("#sum_est").show();

                var vars = f.variables();

		if ($.inArray("y", vars) != -1)
		    throw "Cannot have y on the right hand side.";

		vars = $.grep(vars, function(e) {
		    return e !== "x";
		});

		$("#sliders").children().hide();
		$("#wrap_step").show();
      $("#sample_slide").show();
		for( var i=0; i<vars.length; i++ ) {
		    $("#wrap_" + vars[i]).show();
		}

                // raphael see function
		window.setTimeout(GraphPreview.drawGraph,0);

		$("#graph").show();
		MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
		$("#claim").show();
	    }
	    catch(err)
	    {
		$("#MathFunctionError").show();
		$("#MathPreview").hide();
 		$("#sum_est2").hide();
      $("#sum_est").hide();
		$("#claim").hide();
	    }
	} else {
	    $("#MathPreview").hide();
	    $("#claim").hide();
	    $("#sum_est2").hide();
       $("#sum_est").hide();
	}
    },
};


  $(function() {
    var paper = Raphael(document.getElementById("graph"));
    GraphPreview.paper = paper;

      $("#graph").mousewheel( function(event, delta, deltaX, deltaY) {
	  event.preventDefault();
	  var x1 = GraphPreview.x1;
	  var x2 = GraphPreview.x2;
	  var y1 = GraphPreview.y1;
	  var y2 = GraphPreview.y2;

	  var width = x2 - x1;
	  var height = y2 - y1;

	  var factor = 1.05;
	  if (deltaY < 0)
	      factor = 1.0/factor;

	  var extra_width = width * (factor - 1.0);
	  var extra_height = height * (factor - 1.0);
	  
	  GraphPreview.x1 = x1 - 0.5 * extra_width,
	  GraphPreview.y1 = y1 - 0.5 * extra_height,
	  GraphPreview.x2 = x2 + 0.5 * extra_width,
	  GraphPreview.y2 = y2 + 0.5 * extra_height,

	  window.setTimeout(GraphPreview.drawGraph,0);
      });


	  <% for v in 'a'..'z' %>
      $( "#slider_<%= v %>" ).slider();
      $( "#slider_<%= v %>" ).slider( "option", "min", -10 );
      $( "#slider_<%= v %>" ).slider( "option", "max", 10 );
      $( "#slider_<%= v %>" ).slider( "option", "step", 0.1 );

      $( "#slider_<%= v %>" ).slider({
	  slide: function( event, ui ) { GraphPreview.bindings["<%= v %>"] = ui.value;
					 window.setTimeout(GraphPreview.drawGraph,0); }
      });

      GraphPreview.bindings["<%= v %>"] = 0.0;
      $( "#slider_<%= v %>" ).slider( "option", "value", 0 );

	  <% end %>

      $( "#steps" ).slider();
      $( "#steps" ).slider( "option", "min", 3 );
      $( "#steps" ).slider( "option", "max", 47 );
      $( "#steps" ).slider( "option", "step", 2 );
      $( "#steps" ).slider( "option", "value", 25 );

      $( "#steps" ).slider({
	  slide: function( event, ui ) { h = ui.value;
					 window.setTimeout(GraphPreview.drawGraph,0); }
      });

      $( "#sample" ).slider();
      $( "#sample" ).slider( "option", "min", 0 );
      $( "#sample" ).slider( "option", "max", 1 );
      $( "#sample" ).slider( "option", "step", 0.5 );
      $( "#sample" ).slider( "option", "value", 0.5 );

      $( "#sample" ).slider({
	  slide: function( event, ui ) { adjust = ui.value;				 
					  window.setTimeout(GraphPreview.drawGraph,0);}
      });

      var text = "(a+5)*arctan(x)*sin(x-4)";
      document.getElementById("MathInput").value = text;
      GraphPreview.f = MathFunction.parse(text);
      $("#MathPreview").show();
      $("#claim").show();
      $("#wrap_a").show();
      $("#wrap_step").show();
      $("#sample_slide").show();
      $("#sum_est2").show();
      $("#sum_est").show();
      window.setTimeout(GraphPreview.drawGraph,0);



  });

</script>

<div class="page-header">
  <h1>Riemann sums! <small>Control the step size and sample points with the sliders and buttons.</small></h1>
</div>

<div id="graph" style="float: left; padding-right: 12pt; padding-bottom: 12pt; font-family: 'Computer Modern'; width: <%= resolution %>px; height: <%= resolution %>px;"></div>
<div>

<div id="sliders" style="float: right;">

<div id="wrap_step" class="slider_wrap" style="padding-top: 12pt;  display:none; width: 300px;">
    <span><script type="math/tex">\Delta x</script></span><div id="steps" style="width: 90%; float: right;"></div>
</div>

<div id="sample_slide" class="slider_wrap" style="padding-top: 12pt;  display:none; width: 300px;">
    <span><script type="math/tex">x_i^*</script></span><div id="sample" style="width: 90%; float: right;"></div>
</div>

<% for v in 'a'..'z' %>
<div id="wrap_<%= v %>" class="slider_wrap" style="padding-top: 12pt;  display:none; width: 300px;">
    <span><script type="math/tex"><%= v %></script></span><div id="slider_<%= v %>" style="width: 90%; float: right;"></div>
</div>
<% end %>
</div>

<div>
    <script type="math/tex">f(x) = </script>&nbsp;<input class="function" id="MathInput" onkeyup="GraphPreview.update()" autocomplete="off" type="text" value="" />
</div>

<div id="claim" style="display: none; font-family: 'Computer Modern';"><span id="MathPreview"><script type="math/tex">f(x) = \left( (a+5))*arctan(x)*sin(x-4) \right)</script></span>.</div>

<div id="MathFunctionError" style="display: none; font-weight: bold; color: red;">Error: the expression is invalid.</div>


<div id="sum_est" style="display: none; font-family: 'Computer Modern';">
    <span id="sum_est2"><script type="math/tex">\sum_{i=1}^n f(x_i^*)\Delta x = -0.37807271127852926.</script></span>
</div>

</div>
